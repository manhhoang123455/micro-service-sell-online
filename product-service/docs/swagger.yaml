basePath: /
definitions:
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  product-service_internal_models.CreateProductInput:
    properties:
      description:
        type: string
      name:
        type: string
      price:
        type: number
      stock:
        type: integer
    required:
    - name
    - price
    - stock
    type: object
  product-service_internal_models.Image:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      product_id:
        type: integer
      updatedAt:
        type: string
      url:
        type: string
    type: object
  product-service_internal_models.Product:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      description:
        type: string
      id:
        type: integer
      images:
        items:
          $ref: '#/definitions/product-service_internal_models.Image'
        type: array
      name:
        type: string
      price:
        type: number
      stock:
        type: integer
      updatedAt:
        type: string
    type: object
  product-service_internal_models.UpdateProductInput:
    properties:
      description:
        type: string
      name:
        type: string
      price:
        type: number
      stock:
        type: integer
    required:
    - description
    - name
    - price
    - stock
    type: object
  utils.ErrorResponse:
    properties:
      message:
        type: string
      status:
        type: integer
    type: object
externalDocs:
  description: OpenAPI
host: localhost:8080
info:
  contact: {}
  description: This is a product service API.
  title: Product Service API
  version: "1.0"
paths:
  /products:
    get:
      consumes:
      - application/json
      description: Get all products with details
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/product-service_internal_models.Product'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Get all products
      tags:
      - product
    post:
      consumes:
      - application/json
      description: Create a new product with details
      parameters:
      - description: Product
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/product-service_internal_models.CreateProductInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/product-service_internal_models.Product'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Create a new product
      tags:
      - product
  /products/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a product by ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Delete a product
      tags:
      - product
    get:
      consumes:
      - application/json
      description: Get product details by ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/product-service_internal_models.Product'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Get a product by ID
      tags:
      - product
    put:
      consumes:
      - application/json
      description: Update product details
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Product
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/product-service_internal_models.UpdateProductInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/product-service_internal_models.Product'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Update a product
      tags:
      - product
swagger: "2.0"
